package binarysearch;

import static java.lang.Math.abs;

public class BinarySearch {

    public static void main(String[] args) {
        
    
        int[] num = new int[7];
        num[0] = 1;
        num[1] = 2;
        num[2] = 3;
        num[3] = 4;
        num[4] = 5;
        num[5] = 6;
        num[6] = 78;
        
        System.out.println(buscaBinInt(num, 5));
        //buscaBinRec(num, 4);
    }
    
    public static int buscaBinInt(int[] n, int num){
        
        int meio = ((n.length-1)/2);
        
        if(num == n[meio]){
            return meio;
        }
             
        else if(num > n[meio]){
            for(int i = meio; i < n.length; i++){
                if(n[i] == num){
                    return i;
                }
            }
        }
        else if(num < n[meio]){
            for(int i = 0; i < meio; i++){
                if(n[i] == num){
                    return i;
                }
            }
        }
            return -1; 
        
        /* 
            function binary_search(A, n, T):
            L := 0
            R := n âˆ’ 1
            while L <= R:
                m := floor((L + R) / 2)
                if A[m] < T:
                    L := m + 1
                else if A[m] > T:
                    R := m - 1
                else:
                    return m
            return unsuccessful
        */
        
    }
    
    
    public static int buscaBinRec(int[] n, int num){
               
            return 0;
    }
}
